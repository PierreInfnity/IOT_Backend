version: '3.3'

services:
  dev_backend:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: iot_backend
    ports:
      - '3000:3000'
    networks:
      - database
    depends_on:
      - database
      - rabbitmq
    command: npm run start:dev
    volumes:
      - .:/usr/src/app


  database:
    container_name: iot_database
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    networks:
      - database
    volumes:
      - my-db:/var/lib/mysql

  rabbitmq:
    container_name: rabbitmqBackend
    image: rabbitmq:3.10-management
    networks:
      - database
    ports:
      - 5672:5672
      - 15672:15672

  init_rabbitmq:
      image: rabbitmq:3.10-management
      depends_on:
        - rabbitmq
      networks: 
        - database
      command:
        - sh
        - -c
        - |
          set -e
          sleep 5
          rabbitmqadmin -H rabbitmq -u guest -p guest declare exchange name=appliblanche-exchange type=fanout
          rabbitmqadmin -H rabbitmq -u guest -p guest declare queue name=appliblanche-queue durable=true
          rabbitmqadmin -H rabbitmq -u guest -p guest declare binding source=appliblanche-exchange destination=appliblanche-queue

volumes:
  my-db:
  
networks:
  database:
    driver: bridge

